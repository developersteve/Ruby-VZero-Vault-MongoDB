require 'sinatra'
require 'braintree'
require 'awesome_print'
require 'mongo'
require 'json/ext'
require 'bson'

# Turn off debug-mode
Mongo::Logger.logger.level = Logger::WARN

Braintree::Configuration.environment = :sandbox
Braintree::Configuration.merchant_id = '23nd25g4kn7gnqbb'
Braintree::Configuration.public_key = '8552x2ym5bvhsycp'
Braintree::Configuration.private_key = '17f3279171d4fd90ee9cd5256be17abf'

db = Mongo::Client.new([ 'localhost:27017' ], :database => 'vault')
coll = db['profile']

  get '/' do

    #save in MongoDB
    @mid = coll.insert_one({"first_name" => 'Test', "last_name" => 'User'})

    # create a test user on braintree
    @result = Braintree::Customer.create(
        first_name: 'Test',
        last_name: 'User',
        :custom_fields => {
            :profile_id => @mid.inserted_id # inserts mongo id into custom field for the user
        }
    )

    # store customer id generated by braintree
    @custid = @result.customer.id

    # update the mongo record with the Braintree customer id
    coll.find('_id' => @mid.inserted_id).update_one("$set" => { 'braintree_id' => @custid })

    # Generate a client token for the payment method dropin UI
    @client_token = Braintree::ClientToken.generate
    erb :index

  end

  post '/step2' do

    @custid = params[:custid]

    result = Braintree::PaymentMethod.create(
      customer_id: @custid,
      payment_method_nonce: params[:payment_method_nonce],
    );

    # then stores the token
    @token = result.payment_method.token

    coll.find( 'braintree_id' => @custid).update_one("$push" => { 'token' => @token })

    if result.success?
      @transaction = result.transaction
      erb :step2
    else
      'Process failed'
    end

  end

  post '/step3' do

    @custid = params[:custid]
    @token = params[:token]

    @result = Braintree::Transaction.sale(
      amount: params[:amount],
      payment_method_token: @token,
      customer_id: @custid,
    )

    if @result.success?
      @transaction = @result.transaction.id

      coll.find( 'braintree_id' => @custid).update_one("$push" => { 'transaction' => @transaction })

      erb :step3
    else
      'Process failed'
    end

  end